"use client";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore - need to do this because this file doesn't actually exist
import config from "payload-config";
import React from "react";
import { BrowserRouter as Router } from "react-router-dom";
import { ScrollInfoProvider } from "@faceless-ui/scroll-info";
import { WindowInfoProvider } from "@faceless-ui/window-info";
import { ModalProvider, ModalContainer } from "@faceless-ui/modal";
import { ToastContainer, Slide } from "react-toastify";
import { AuthProvider } from "./components/utilities/Auth";
import { ConfigProvider } from "./components/utilities/Config";
import { PreferencesProvider } from "./components/utilities/Preferences";
import { CustomProvider } from "./components/utilities/CustomProvider";
import { SearchParamsProvider } from "./components/utilities/SearchParams";
import { LocaleProvider } from "./components/utilities/Locale";
import Routes from "./components/Routes";
import { StepNavProvider } from "./components/elements/StepNav";
import { ThemeProvider } from "./components/utilities/Theme";
import { I18n } from "./components/utilities/I18n";
import { LoadingOverlayProvider } from "./components/utilities/LoadingOverlay";
import "./scss/app.scss";
var Root = function() {
    return /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(ConfigProvider, {
        config: config
    }, /*#__PURE__*/ React.createElement(I18n, null), /*#__PURE__*/ React.createElement(WindowInfoProvider, {
        breakpoints: {
            xs: "(max-width: 400px)",
            s: "(max-width: 768px)",
            m: "(max-width: 1024px)",
            l: "(max-width: 1440px)"
        }
    }, /*#__PURE__*/ React.createElement(ScrollInfoProvider, null, /*#__PURE__*/ React.createElement(Router, null, /*#__PURE__*/ React.createElement(ModalProvider, {
        classPrefix: "payload",
        zIndex: "var(--z-modal)",
        transTime: 0
    }, /*#__PURE__*/ React.createElement(AuthProvider, null, /*#__PURE__*/ React.createElement(PreferencesProvider, null, /*#__PURE__*/ React.createElement(ThemeProvider, null, /*#__PURE__*/ React.createElement(SearchParamsProvider, null, /*#__PURE__*/ React.createElement(LocaleProvider, null, /*#__PURE__*/ React.createElement(StepNavProvider, null, /*#__PURE__*/ React.createElement(LoadingOverlayProvider, null, /*#__PURE__*/ React.createElement(CustomProvider, null, /*#__PURE__*/ React.createElement(Routes, null))))))), /*#__PURE__*/ React.createElement(ModalContainer, null)))))))), /*#__PURE__*/ React.createElement(ToastContainer, {
        position: "bottom-center",
        transition: Slide,
        icon: false
    }));
};
export default Root;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZG1pbi9Sb290LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbi8vIEB0cy1pZ25vcmUgLSBuZWVkIHRvIGRvIHRoaXMgYmVjYXVzZSB0aGlzIGZpbGUgZG9lc24ndCBhY3R1YWxseSBleGlzdFxuaW1wb3J0IGNvbmZpZyBmcm9tICdwYXlsb2FkLWNvbmZpZyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IFNjcm9sbEluZm9Qcm92aWRlciB9IGZyb20gJ0BmYWNlbGVzcy11aS9zY3JvbGwtaW5mbyc7XG5pbXBvcnQgeyBXaW5kb3dJbmZvUHJvdmlkZXIgfSBmcm9tICdAZmFjZWxlc3MtdWkvd2luZG93LWluZm8nO1xuaW1wb3J0IHsgTW9kYWxQcm92aWRlciwgTW9kYWxDb250YWluZXIgfSBmcm9tICdAZmFjZWxlc3MtdWkvbW9kYWwnO1xuaW1wb3J0IHsgVG9hc3RDb250YWluZXIsIFNsaWRlIH0gZnJvbSAncmVhY3QtdG9hc3RpZnknO1xuaW1wb3J0IHsgQXV0aFByb3ZpZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL3V0aWxpdGllcy9BdXRoJztcbmltcG9ydCB7IENvbmZpZ1Byb3ZpZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL3V0aWxpdGllcy9Db25maWcnO1xuaW1wb3J0IHsgUHJlZmVyZW5jZXNQcm92aWRlciB9IGZyb20gJy4vY29tcG9uZW50cy91dGlsaXRpZXMvUHJlZmVyZW5jZXMnO1xuaW1wb3J0IHsgQ3VzdG9tUHJvdmlkZXIgfSBmcm9tICcuL2NvbXBvbmVudHMvdXRpbGl0aWVzL0N1c3RvbVByb3ZpZGVyJztcbmltcG9ydCB7IFNlYXJjaFBhcmFtc1Byb3ZpZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL3V0aWxpdGllcy9TZWFyY2hQYXJhbXMnO1xuaW1wb3J0IHsgTG9jYWxlUHJvdmlkZXIgfSBmcm9tICcuL2NvbXBvbmVudHMvdXRpbGl0aWVzL0xvY2FsZSc7XG5pbXBvcnQgUm91dGVzIGZyb20gJy4vY29tcG9uZW50cy9Sb3V0ZXMnO1xuaW1wb3J0IHsgU3RlcE5hdlByb3ZpZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL2VsZW1lbnRzL1N0ZXBOYXYnO1xuaW1wb3J0IHsgVGhlbWVQcm92aWRlciB9IGZyb20gJy4vY29tcG9uZW50cy91dGlsaXRpZXMvVGhlbWUnO1xuaW1wb3J0IHsgSTE4biB9IGZyb20gJy4vY29tcG9uZW50cy91dGlsaXRpZXMvSTE4bic7XG5pbXBvcnQgeyBMb2FkaW5nT3ZlcmxheVByb3ZpZGVyIH0gZnJvbSAnLi9jb21wb25lbnRzL3V0aWxpdGllcy9Mb2FkaW5nT3ZlcmxheSc7XG5cbmltcG9ydCAnLi9zY3NzL2FwcC5zY3NzJztcblxuY29uc3QgUm9vdCA9ICgpID0+IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxDb25maWdQcm92aWRlciBjb25maWc9e2NvbmZpZ30+XG4gICAgICA8STE4biAvPlxuICAgICAgPFdpbmRvd0luZm9Qcm92aWRlciBicmVha3BvaW50cz17e1xuICAgICAgICB4czogJyhtYXgtd2lkdGg6IDQwMHB4KScsXG4gICAgICAgIHM6ICcobWF4LXdpZHRoOiA3NjhweCknLFxuICAgICAgICBtOiAnKG1heC13aWR0aDogMTAyNHB4KScsXG4gICAgICAgIGw6ICcobWF4LXdpZHRoOiAxNDQwcHgpJyxcbiAgICAgIH19XG4gICAgICA+XG4gICAgICAgIDxTY3JvbGxJbmZvUHJvdmlkZXI+XG4gICAgICAgICAgPFJvdXRlcj5cbiAgICAgICAgICAgIDxNb2RhbFByb3ZpZGVyXG4gICAgICAgICAgICAgIGNsYXNzUHJlZml4PVwicGF5bG9hZFwiXG4gICAgICAgICAgICAgIHpJbmRleD1cInZhcigtLXotbW9kYWwpXCJcbiAgICAgICAgICAgICAgdHJhbnNUaW1lPXswfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8QXV0aFByb3ZpZGVyPlxuICAgICAgICAgICAgICAgIDxQcmVmZXJlbmNlc1Byb3ZpZGVyPlxuICAgICAgICAgICAgICAgICAgPFRoZW1lUHJvdmlkZXI+XG4gICAgICAgICAgICAgICAgICAgIDxTZWFyY2hQYXJhbXNQcm92aWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICA8TG9jYWxlUHJvdmlkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8U3RlcE5hdlByb3ZpZGVyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8TG9hZGluZ092ZXJsYXlQcm92aWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q3VzdG9tUHJvdmlkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Um91dGVzIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9DdXN0b21Qcm92aWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Mb2FkaW5nT3ZlcmxheVByb3ZpZGVyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9TdGVwTmF2UHJvdmlkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPC9Mb2NhbGVQcm92aWRlcj5cbiAgICAgICAgICAgICAgICAgICAgPC9TZWFyY2hQYXJhbXNQcm92aWRlcj5cbiAgICAgICAgICAgICAgICAgIDwvVGhlbWVQcm92aWRlcj5cbiAgICAgICAgICAgICAgICAgIDxNb2RhbENvbnRhaW5lciAvPlxuICAgICAgICAgICAgICAgIDwvUHJlZmVyZW5jZXNQcm92aWRlcj5cbiAgICAgICAgICAgICAgPC9BdXRoUHJvdmlkZXI+XG4gICAgICAgICAgICA8L01vZGFsUHJvdmlkZXI+XG4gICAgICAgICAgPC9Sb3V0ZXI+XG4gICAgICAgIDwvU2Nyb2xsSW5mb1Byb3ZpZGVyPlxuICAgICAgPC9XaW5kb3dJbmZvUHJvdmlkZXI+XG4gICAgPC9Db25maWdQcm92aWRlcj5cbiAgICA8VG9hc3RDb250YWluZXJcbiAgICAgIHBvc2l0aW9uPVwiYm90dG9tLWNlbnRlclwiXG4gICAgICB0cmFuc2l0aW9uPXtTbGlkZX1cbiAgICAgIGljb249e2ZhbHNlfVxuICAgIC8+XG4gIDwvUmVhY3QuRnJhZ21lbnQ+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBSb290O1xuIl0sIm5hbWVzIjpbImNvbmZpZyIsIlJlYWN0IiwiQnJvd3NlclJvdXRlciIsIlJvdXRlciIsIlNjcm9sbEluZm9Qcm92aWRlciIsIldpbmRvd0luZm9Qcm92aWRlciIsIk1vZGFsUHJvdmlkZXIiLCJNb2RhbENvbnRhaW5lciIsIlRvYXN0Q29udGFpbmVyIiwiU2xpZGUiLCJBdXRoUHJvdmlkZXIiLCJDb25maWdQcm92aWRlciIsIlByZWZlcmVuY2VzUHJvdmlkZXIiLCJDdXN0b21Qcm92aWRlciIsIlNlYXJjaFBhcmFtc1Byb3ZpZGVyIiwiTG9jYWxlUHJvdmlkZXIiLCJSb3V0ZXMiLCJTdGVwTmF2UHJvdmlkZXIiLCJUaGVtZVByb3ZpZGVyIiwiSTE4biIsIkxvYWRpbmdPdmVybGF5UHJvdmlkZXIiLCJSb290IiwiRnJhZ21lbnQiLCJicmVha3BvaW50cyIsInhzIiwicyIsIm0iLCJsIiwiY2xhc3NQcmVmaXgiLCJ6SW5kZXgiLCJ0cmFuc1RpbWUiLCJwb3NpdGlvbiIsInRyYW5zaXRpb24iLCJpY29uIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBLDZEQUE2RDtBQUM3RCx3RUFBd0U7QUFDeEUsT0FBT0EsWUFBWSxpQkFBaUI7QUFDcEMsT0FBT0MsV0FBVyxRQUFRO0FBQzFCLFNBQVNDLGlCQUFpQkMsTUFBTSxRQUFRLG1CQUFtQjtBQUMzRCxTQUFTQyxrQkFBa0IsUUFBUSwyQkFBMkI7QUFDOUQsU0FBU0Msa0JBQWtCLFFBQVEsMkJBQTJCO0FBQzlELFNBQVNDLGFBQWEsRUFBRUMsY0FBYyxRQUFRLHFCQUFxQjtBQUNuRSxTQUFTQyxjQUFjLEVBQUVDLEtBQUssUUFBUSxpQkFBaUI7QUFDdkQsU0FBU0MsWUFBWSxRQUFRLDhCQUE4QjtBQUMzRCxTQUFTQyxjQUFjLFFBQVEsZ0NBQWdDO0FBQy9ELFNBQVNDLG1CQUFtQixRQUFRLHFDQUFxQztBQUN6RSxTQUFTQyxjQUFjLFFBQVEsd0NBQXdDO0FBQ3ZFLFNBQVNDLG9CQUFvQixRQUFRLHNDQUFzQztBQUMzRSxTQUFTQyxjQUFjLFFBQVEsZ0NBQWdDO0FBQy9ELE9BQU9DLFlBQVksc0JBQXNCO0FBQ3pDLFNBQVNDLGVBQWUsUUFBUSxnQ0FBZ0M7QUFDaEUsU0FBU0MsYUFBYSxRQUFRLCtCQUErQjtBQUM3RCxTQUFTQyxJQUFJLFFBQVEsOEJBQThCO0FBQ25ELFNBQVNDLHNCQUFzQixRQUFRLHdDQUF3QztBQUUvRSxPQUFPLGtCQUFrQjtBQUV6QixJQUFNQyxPQUFPO3lCQUNYLG9CQUFDcEIsTUFBTXFCLFFBQVEsc0JBQ2Isb0JBQUNYO1FBQWVYLFFBQVFBO3FCQUN0QixvQkFBQ21CLDJCQUNELG9CQUFDZDtRQUFtQmtCLGFBQWE7WUFDL0JDLElBQUk7WUFDSkMsR0FBRztZQUNIQyxHQUFHO1lBQ0hDLEdBQUc7UUFDTDtxQkFFRSxvQkFBQ3ZCLHdDQUNDLG9CQUFDRCw0QkFDQyxvQkFBQ0c7UUFDQ3NCLGFBQVk7UUFDWkMsUUFBTztRQUNQQyxXQUFXO3FCQUVYLG9CQUFDcEIsa0NBQ0Msb0JBQUNFLHlDQUNDLG9CQUFDTSxtQ0FDQyxvQkFBQ0osMENBQ0Msb0JBQUNDLG9DQUNDLG9CQUFDRSxxQ0FDQyxvQkFBQ0csNENBQ0Msb0JBQUNQLG9DQUNDLG9CQUFDRyxtQ0FPYixvQkFBQ1QsNENBUWYsb0JBQUNDO1FBQ0N1QixVQUFTO1FBQ1RDLFlBQVl2QjtRQUNad0IsTUFBTTs7O0FBS1osZUFBZVosS0FBSyJ9