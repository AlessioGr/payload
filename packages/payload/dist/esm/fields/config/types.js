/* eslint-disable no-use-before-define */ export function valueIsValueWithRelation(value) {
    return value !== null && typeof value === "object" && "relationTo" in value && "value" in value;
}
export function fieldHasSubFields(field) {
    return field.type === "group" || field.type === "array" || field.type === "row" || field.type === "collapsible";
}
export function fieldIsArrayType(field) {
    return field.type === "array";
}
export function fieldIsBlockType(field) {
    return field.type === "blocks";
}
export function optionIsObject(option) {
    return typeof option === "object";
}
export function optionsAreObjects(options) {
    var _options;
    return Array.isArray(options) && typeof ((_options = options) === null || _options === void 0 ? void 0 : _options[0]) === "object";
}
export function optionIsValue(option) {
    return typeof option === "string";
}
export function fieldSupportsMany(field) {
    return field.type === "select" || field.type === "relationship";
}
export function fieldHasMaxDepth(field) {
    return (field.type === "upload" || field.type === "relationship") && typeof field.maxDepth === "number";
}
export function fieldIsPresentationalOnly(field) {
    return field.type === "ui";
}
export function fieldAffectsData(field) {
    return "name" in field && !fieldIsPresentationalOnly(field);
}
export function tabHasName(tab) {
    return "name" in tab;
}
export function fieldIsLocalized(field) {
    return "localized" in field && field.localized;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9maWVsZHMvY29uZmlnL3R5cGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVzZS1iZWZvcmUtZGVmaW5lICovXG5pbXBvcnQgeyBDU1NQcm9wZXJ0aWVzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRWRpdG9yIH0gZnJvbSAnc2xhdGUnO1xuaW1wb3J0IHR5cGUgeyBpMThuIGFzIElpMThuLCBURnVuY3Rpb24gfSBmcm9tICdpMThuZXh0JztcbmltcG9ydCB0eXBlIHsgRWRpdG9yUHJvcHMgfSBmcm9tICdAbW9uYWNvLWVkaXRvci9yZWFjdCc7XG5pbXBvcnQgbW9uYWNvZWRpdG9yIGZyb20gJ21vbmFjby1lZGl0b3InOyAvLyBJTVBPUlRBTlQgLSBETyBOT1QgUkVNT1ZFOiBUaGlzIGlzIHJlcXVpcmVkIGZvciBwbnBtJ3MgZGVmYXVsdCBpc29sYXRlZCBtb2RlIHRvIHdvcmsgLSBldmVuIHRob3VnaCB0aGUgaW1wb3J0IGlzIG5vdCB1c2VkLiBUaGlzIGlzIGR1ZSB0byBhIHR5cGVzY3JpcHQgYnVnOiBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzQ3NjYzI2lzc3VlY29tbWVudC0xNTE5MTM4MTg5LiAodHNidWdpc29sYXRlZG1vZGUpXG5pbXBvcnQgeyBPcGVyYXRpb24sIFdoZXJlIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0IHsgU2FuaXRpemVkQ29uZmlnIH0gZnJvbSAnLi4vLi4vY29uZmlnL3R5cGVzJztcbmltcG9ydCB7IFR5cGVXaXRoSUQgfSBmcm9tICcuLi8uLi9jb2xsZWN0aW9ucy9jb25maWcvdHlwZXMnO1xuaW1wb3J0IHsgUGF5bG9hZFJlcXVlc3QsIFJlcXVlc3RDb250ZXh0IH0gZnJvbSAnLi4vLi4vZXhwcmVzcy90eXBlcyc7XG5pbXBvcnQgeyBDb25kaXRpb25hbERhdGVQcm9wcyB9IGZyb20gJy4uLy4uL2FkbWluL2NvbXBvbmVudHMvZWxlbWVudHMvRGF0ZVBpY2tlci90eXBlcyc7XG5pbXBvcnQgeyBEZXNjcmlwdGlvbiB9IGZyb20gJy4uLy4uL2FkbWluL2NvbXBvbmVudHMvZm9ybXMvRmllbGREZXNjcmlwdGlvbi90eXBlcyc7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vLi4vYXV0aCc7XG5pbXBvcnQgeyBQYXlsb2FkIH0gZnJvbSAnLi4vLi4vcGF5bG9hZCc7XG5pbXBvcnQgeyBSb3dMYWJlbCB9IGZyb20gJy4uLy4uL2FkbWluL2NvbXBvbmVudHMvZm9ybXMvUm93TGFiZWwvdHlwZXMnO1xuXG5leHBvcnQgdHlwZSBGaWVsZEhvb2tBcmdzPFQgZXh0ZW5kcyBUeXBlV2l0aElEID0gYW55LCBQID0gYW55LCBTID0gYW55PiA9IHtcbiAgLyoqIFRoZSBkYXRhIHBhc3NlZCB0byB1cGRhdGUgdGhlIGRvY3VtZW50IHdpdGhpbiBjcmVhdGUgYW5kIHVwZGF0ZSBvcGVyYXRpb25zLCBhbmQgdGhlIGZ1bGwgZG9jdW1lbnQgaXRzZWxmIGluIHRoZSBhZnRlclJlYWQgaG9vay4gKi9cbiAgZGF0YT86IFBhcnRpYWw8VD4sXG4gIC8qKiBCb29sZWFuIHRvIGRlbm90ZSBpZiB0aGlzIGhvb2sgaXMgcnVubmluZyBhZ2FpbnN0IGZpbmRpbmcgb25lLCBvciBmaW5kaW5nIG1hbnkgd2l0aGluIHRoZSBhZnRlclJlYWQgaG9vay4gKi9cbiAgZmluZE1hbnk/OiBib29sZWFuXG4gIC8qKiBUaGUgZnVsbCBvcmlnaW5hbCBkb2N1bWVudCBpbiBgdXBkYXRlYCBvcGVyYXRpb25zLiBJbiB0aGUgYGFmdGVyQ2hhbmdlYCBob29rLCB0aGlzIGlzIHRoZSByZXN1bHRpbmcgZG9jdW1lbnQgb2YgdGhlIG9wZXJhdGlvbi4gKi9cbiAgb3JpZ2luYWxEb2M/OiBULFxuICAvKiogVGhlIGRvY3VtZW50IGJlZm9yZSBjaGFuZ2VzIHdlcmUgYXBwbGllZCwgb25seSBpbiBgYWZ0ZXJDaGFuZ2VgIGhvb2tzLiAqL1xuICBwcmV2aW91c0RvYz86IFQsXG4gIC8qKiBUaGUgc2libGluZyBkYXRhIGZyb20gdGhlIHByZXZpb3VzIGRvY3VtZW50IGluIGBhZnRlckNoYW5nZWAgaG9vay4gKi9cbiAgcHJldmlvdXNTaWJsaW5nRG9jPzogVCxcbiAgLyoqIEEgc3RyaW5nIHJlbGF0aW5nIHRvIHdoaWNoIG9wZXJhdGlvbiB0aGUgZmllbGQgdHlwZSBpcyBjdXJyZW50bHkgZXhlY3V0aW5nIHdpdGhpbi4gVXNlZnVsIHdpdGhpbiBiZWZvcmVWYWxpZGF0ZSwgYmVmb3JlQ2hhbmdlLCBhbmQgYWZ0ZXJDaGFuZ2UgaG9va3MgdG8gZGlmZmVyZW50aWF0ZSBiZXR3ZWVuIGNyZWF0ZSBhbmQgdXBkYXRlIG9wZXJhdGlvbnMuICovXG4gIG9wZXJhdGlvbj86ICdjcmVhdGUnIHwgJ3JlYWQnIHwgJ3VwZGF0ZScgfCAnZGVsZXRlJyxcbiAgLyoqIFRoZSBFeHByZXNzIHJlcXVlc3Qgb2JqZWN0LiBJdCBpcyBtb2NrZWQgZm9yIExvY2FsIEFQSSBvcGVyYXRpb25zLiAqL1xuICByZXE6IFBheWxvYWRSZXF1ZXN0XG4gIC8qKiBUaGUgc2libGluZyBkYXRhIHBhc3NlZCB0byBhIGZpZWxkIHRoYXQgdGhlIGhvb2sgaXMgcnVubmluZyBhZ2FpbnN0LiAqL1xuICBzaWJsaW5nRGF0YTogUGFydGlhbDxTPlxuICAvKiogVGhlIHZhbHVlIG9mIHRoZSBmaWVsZC4gKi9cbiAgdmFsdWU/OiBQLFxuICBwcmV2aW91c1ZhbHVlPzogUCxcbiAgY29udGV4dDogUmVxdWVzdENvbnRleHRcbn1cblxuZXhwb3J0IHR5cGUgRmllbGRIb29rPFQgZXh0ZW5kcyBUeXBlV2l0aElEID0gYW55LCBQID0gYW55LCBTID0gYW55PiA9IChhcmdzOiBGaWVsZEhvb2tBcmdzPFQsIFAsIFM+KSA9PiBQcm9taXNlPFA+IHwgUDtcblxuZXhwb3J0IHR5cGUgRmllbGRBY2Nlc3M8VCBleHRlbmRzIFR5cGVXaXRoSUQgPSBhbnksIFAgPSBhbnksIFUgPSBhbnk+ID0gKGFyZ3M6IHtcbiAgcmVxOiBQYXlsb2FkUmVxdWVzdDxVPlxuICBpZD86IHN0cmluZyB8IG51bWJlclxuICBkYXRhPzogUGFydGlhbDxUPlxuICBzaWJsaW5nRGF0YT86IFBhcnRpYWw8UD5cbiAgZG9jPzogVFxufSkgPT4gUHJvbWlzZTxib29sZWFuPiB8IGJvb2xlYW47XG5cbmV4cG9ydCB0eXBlIENvbmRpdGlvbjxUIGV4dGVuZHMgVHlwZVdpdGhJRCA9IGFueSwgUCA9IGFueT4gPSAoZGF0YTogUGFydGlhbDxUPiwgc2libGluZ0RhdGE6IFBhcnRpYWw8UD4sIHsgdXNlciB9OiB7IHVzZXI6IFVzZXIgfSkgPT4gYm9vbGVhbjtcblxuZXhwb3J0IHR5cGUgRmlsdGVyT3B0aW9uc1Byb3BzPFQgPSBhbnk+ID0ge1xuICBpZDogc3RyaW5nIHwgbnVtYmVyLFxuICB1c2VyOiBQYXJ0aWFsPFVzZXI+LFxuICBkYXRhOiBULFxuICBzaWJsaW5nRGF0YTogdW5rbm93bixcbiAgcmVsYXRpb25Ubzogc3RyaW5nLFxufVxuXG5leHBvcnQgdHlwZSBGaWx0ZXJPcHRpb25zPFQgPSBhbnk+ID0gV2hlcmUgfCAoKG9wdGlvbnM6IEZpbHRlck9wdGlvbnNQcm9wczxUPikgPT4gKFdoZXJlIHwgUHJvbWlzZTxXaGVyZT4pKTtcblxudHlwZSBBZG1pbiA9IHtcbiAgcG9zaXRpb24/OiAnc2lkZWJhcic7XG4gIHdpZHRoPzogc3RyaW5nO1xuICBzdHlsZT86IENTU1Byb3BlcnRpZXM7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgcmVhZE9ubHk/OiBib29sZWFuO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIGNvbmRpdGlvbj86IENvbmRpdGlvbjtcbiAgZGVzY3JpcHRpb24/OiBEZXNjcmlwdGlvbjtcbiAgY29tcG9uZW50cz86IHtcbiAgICBGaWx0ZXI/OiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT47XG4gICAgQ2VsbD86IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PjtcbiAgICBGaWVsZD86IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PjtcbiAgfVxuICBkaXNhYmxlQnVsa0VkaXQ/OiBib29sZWFuXG4gIGhpZGRlbj86IGJvb2xlYW5cbn1cblxuZXhwb3J0IHR5cGUgTGFiZWxzID0ge1xuICBzaW5ndWxhcjogUmVjb3JkPHN0cmluZywgc3RyaW5nPiB8IHN0cmluZztcbiAgcGx1cmFsOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHwgc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgVmFsaWRhdGVPcHRpb25zPFREYXRhLCBUU2libGluZ0RhdGEsIFRGaWVsZENvbmZpZz4gPSB7XG4gIGRhdGE6IFBhcnRpYWw8VERhdGE+XG4gIHNpYmxpbmdEYXRhOiBQYXJ0aWFsPFRTaWJsaW5nRGF0YT5cbiAgaWQ/OiBzdHJpbmcgfCBudW1iZXJcbiAgdXNlcj86IFBhcnRpYWw8VXNlcj5cbiAgb3BlcmF0aW9uPzogT3BlcmF0aW9uXG4gIHBheWxvYWQ/OiBQYXlsb2FkXG4gIHQ6IFRGdW5jdGlvblxufSAmIFRGaWVsZENvbmZpZztcblxuZXhwb3J0IHR5cGUgVmFsaWRhdGU8VFZhbHVlID0gYW55LCBURGF0YSA9IGFueSwgVFNpYmxpbmdEYXRhID0gYW55LCBURmllbGRDb25maWcgPSBhbnk+ID0gKHZhbHVlOiBUVmFsdWUsIG9wdGlvbnM6IFZhbGlkYXRlT3B0aW9uczxURGF0YSwgVFNpYmxpbmdEYXRhLCBURmllbGRDb25maWc+KSA9PiBzdHJpbmcgfCB0cnVlIHwgUHJvbWlzZTxzdHJpbmcgfCB0cnVlPjtcblxuZXhwb3J0IHR5cGUgT3B0aW9uT2JqZWN0ID0ge1xuICBsYWJlbDogUmVjb3JkPHN0cmluZywgc3RyaW5nPiB8IHN0cmluZ1xuICB2YWx1ZTogc3RyaW5nXG59XG5cbmV4cG9ydCB0eXBlIE9wdGlvbiA9IE9wdGlvbk9iamVjdCB8IHN0cmluZ1xuXG5leHBvcnQgaW50ZXJmYWNlIEZpZWxkQmFzZSB7XG4gIG5hbWU6IHN0cmluZztcbiAgbGFiZWw/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHwgc3RyaW5nIHwgZmFsc2U7XG4gIHJlcXVpcmVkPzogYm9vbGVhbjtcbiAgdW5pcXVlPzogYm9vbGVhbjtcbiAgaW5kZXg/OiBib29sZWFuO1xuICBkZWZhdWx0VmFsdWU/OiBhbnk7XG4gIGhpZGRlbj86IGJvb2xlYW47XG4gIHNhdmVUb0pXVD86IHN0cmluZyB8IGJvb2xlYW47XG4gIGxvY2FsaXplZD86IGJvb2xlYW47XG4gIHZhbGlkYXRlPzogVmFsaWRhdGU7XG4gIGhvb2tzPzoge1xuICAgIGJlZm9yZVZhbGlkYXRlPzogRmllbGRIb29rW107XG4gICAgYmVmb3JlQ2hhbmdlPzogRmllbGRIb29rW107XG4gICAgYWZ0ZXJDaGFuZ2U/OiBGaWVsZEhvb2tbXTtcbiAgICBhZnRlclJlYWQ/OiBGaWVsZEhvb2tbXTtcbiAgfVxuICBhZG1pbj86IEFkbWluO1xuICBhY2Nlc3M/OiB7XG4gICAgY3JlYXRlPzogRmllbGRBY2Nlc3M7XG4gICAgcmVhZD86IEZpZWxkQWNjZXNzO1xuICAgIHVwZGF0ZT86IEZpZWxkQWNjZXNzO1xuICB9O1xuICAvKiogRXh0ZW5zaW9uIHBvaW50IHRvIGFkZCB5b3VyIGN1c3RvbSBkYXRhLiAqL1xuICBjdXN0b20/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xufVxuXG5leHBvcnQgdHlwZSBOdW1iZXJGaWVsZCA9IEZpZWxkQmFzZSAmIHtcbiAgdHlwZTogJ251bWJlcic7XG4gIGFkbWluPzogQWRtaW4gJiB7XG4gICAgLyoqIFNldCB0aGlzIHByb3BlcnR5IHRvIGEgc3RyaW5nIHRoYXQgd2lsbCBiZSB1c2VkIGZvciBicm93c2VyIGF1dG9jb21wbGV0ZS4gKi9cbiAgICBhdXRvQ29tcGxldGU/OiBzdHJpbmdcbiAgICAvKiogU2V0IHRoaXMgcHJvcGVydHkgdG8gZGVmaW5lIGEgcGxhY2Vob2xkZXIgc3RyaW5nIGZvciB0aGUgZmllbGQuICovXG4gICAgcGxhY2Vob2xkZXI/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHwgc3RyaW5nXG4gICAgLyoqIFNldCBhIHZhbHVlIGZvciB0aGUgbnVtYmVyIGZpZWxkIHRvIGluY3JlbWVudCAvIGRlY3JlbWVudCB1c2luZyBicm93c2VyIGNvbnRyb2xzLiAqL1xuICAgIHN0ZXA/OiBudW1iZXJcbiAgfVxuICAvKiogTWluaW11bSB2YWx1ZSBhY2NlcHRlZC4gVXNlZCBpbiB0aGUgZGVmYXVsdCBgdmFsaWRhdGlvbmAgZnVuY3Rpb24uICovXG4gIG1pbj86IG51bWJlclxuICAvKiogTWF4aW11bSB2YWx1ZSBhY2NlcHRlZC4gVXNlZCBpbiB0aGUgZGVmYXVsdCBgdmFsaWRhdGlvbmAgZnVuY3Rpb24uICovXG4gIG1heD86IG51bWJlclxufSAmICh7XG4gIC8qKiBNYWtlcyB0aGlzIGZpZWxkIGFuIG9yZGVyZWQgYXJyYXkgb2YgbnVtYmVycyBpbnN0ZWFkIG9mIGp1c3QgYSBzaW5nbGUgbnVtYmVyLiAqL1xuICBoYXNNYW55OiB0cnVlXG4gIC8qKiBNaW5pbXVtIG51bWJlciBvZiBudW1iZXJzIGluIHRoZSBudW1iZXJzIGFycmF5LCBpZiBgaGFzTWFueWAgaXMgc2V0IHRvIHRydWUuICovXG4gIG1pblJvd3M/OiBudW1iZXJcbiAgLyoqIE1heGltdW0gbnVtYmVyIG9mIG51bWJlcnMgaW4gdGhlIG51bWJlcnMgYXJyYXksIGlmIGBoYXNNYW55YCBpcyBzZXQgdG8gdHJ1ZS4gKi9cbiAgbWF4Um93cz86IG51bWJlclxufSB8IHtcbiAgLyoqIE1ha2VzIHRoaXMgZmllbGQgYW4gb3JkZXJlZCBhcnJheSBvZiBudW1iZXJzIGluc3RlYWQgb2YganVzdCBhIHNpbmdsZSBudW1iZXIuICovXG4gIGhhc01hbnk/OiBmYWxzZSB8IHVuZGVmaW5lZFxuICAvKiogTWluaW11bSBudW1iZXIgb2YgbnVtYmVycyBpbiB0aGUgbnVtYmVycyBhcnJheSwgaWYgYGhhc01hbnlgIGlzIHNldCB0byB0cnVlLiAqL1xuICBtaW5Sb3dzPzogdW5kZWZpbmVkXG4gIC8qKiBNYXhpbXVtIG51bWJlciBvZiBudW1iZXJzIGluIHRoZSBudW1iZXJzIGFycmF5LCBpZiBgaGFzTWFueWAgaXMgc2V0IHRvIHRydWUuICovXG4gIG1heFJvd3M/OiB1bmRlZmluZWRcbn0pXG5cblxuZXhwb3J0IHR5cGUgVGV4dEZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAndGV4dCc7XG4gIG1heExlbmd0aD86IG51bWJlclxuICBtaW5MZW5ndGg/OiBudW1iZXJcbiAgYWRtaW4/OiBBZG1pbiAmIHtcbiAgICBwbGFjZWhvbGRlcj86IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCBzdHJpbmdcbiAgICBhdXRvQ29tcGxldGU/OiBzdHJpbmdcbiAgICBydGw/OiBib29sZWFuXG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgRW1haWxGaWVsZCA9IEZpZWxkQmFzZSAmIHtcbiAgdHlwZTogJ2VtYWlsJztcbiAgYWRtaW4/OiBBZG1pbiAmIHtcbiAgICBwbGFjZWhvbGRlcj86IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCBzdHJpbmdcbiAgICBhdXRvQ29tcGxldGU/OiBzdHJpbmdcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBUZXh0YXJlYUZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAndGV4dGFyZWEnO1xuICBtYXhMZW5ndGg/OiBudW1iZXJcbiAgbWluTGVuZ3RoPzogbnVtYmVyXG4gIGFkbWluPzogQWRtaW4gJiB7XG4gICAgcGxhY2Vob2xkZXI/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+IHwgc3RyaW5nXG4gICAgcm93cz86IG51bWJlclxuICAgIHJ0bD86IGJvb2xlYW5cbiAgfVxufVxuXG5leHBvcnQgdHlwZSBDaGVja2JveEZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAnY2hlY2tib3gnO1xufVxuXG5leHBvcnQgdHlwZSBEYXRlRmllbGQgPSBGaWVsZEJhc2UgJiB7XG4gIHR5cGU6ICdkYXRlJztcbiAgYWRtaW4/OiBBZG1pbiAmIHtcbiAgICBwbGFjZWhvbGRlcj86IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCBzdHJpbmdcbiAgICBkYXRlPzogQ29uZGl0aW9uYWxEYXRlUHJvcHNcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBHcm91cEZpZWxkID0gT21pdDxGaWVsZEJhc2UsICdyZXF1aXJlZCcgfCAndmFsaWRhdGlvbic+ICYge1xuICB0eXBlOiAnZ3JvdXAnO1xuICBmaWVsZHM6IEZpZWxkW107XG4gIGFkbWluPzogQWRtaW4gJiB7XG4gICAgaGlkZUd1dHRlcj86IGJvb2xlYW5cbiAgfVxuICAvKiogQ3VzdG9taXplIGdlbmVyYXRlZCBHcmFwaFFMIGFuZCBUeXBlc2NyaXB0IHNjaGVtYSBuYW1lcy5cbiAgICogQnkgZGVmYXVsdCBpdCBpcyBib3VuZCB0byB0aGUgY29sbGVjdGlvbi5cbiAgICpcbiAgICogVGhpcyBpcyB1c2VmdWwgaWYgeW91IHdvdWxkIGxpa2UgdG8gZ2VuZXJhdGUgYSB0b3AgbGV2ZWwgdHlwZSB0byBzaGFyZSBhbW9uZ3N0IGNvbGxlY3Rpb25zL2ZpZWxkcy5cbiAgICogKipOb3RlKio6IFRvcCBsZXZlbCB0eXBlcyBjYW4gY29sbGlkZSwgZW5zdXJlIHRoZXkgYXJlIHVuaXF1ZSBhbW9uZyBjb2xsZWN0aW9ucywgYXJyYXlzLCBncm91cHMsIGJsb2NrcywgdGFicy5cbiAgICovXG4gIGludGVyZmFjZU5hbWU/OiBzdHJpbmdcbn1cblxuZXhwb3J0IHR5cGUgUm93QWRtaW4gPSBPbWl0PEFkbWluLCAnZGVzY3JpcHRpb24nPjtcblxuZXhwb3J0IHR5cGUgUm93RmllbGQgPSBPbWl0PEZpZWxkQmFzZSwgJ2FkbWluJyB8ICduYW1lJyB8ICdsYWJlbCc+ICYge1xuICBhZG1pbj86IFJvd0FkbWluO1xuICB0eXBlOiAncm93JztcbiAgZmllbGRzOiBGaWVsZFtdO1xufVxuXG5leHBvcnQgdHlwZSBDb2xsYXBzaWJsZUZpZWxkID0gT21pdDxGaWVsZEJhc2UsICduYW1lJyB8ICdsYWJlbCc+ICYge1xuICB0eXBlOiAnY29sbGFwc2libGUnO1xuICBsYWJlbDogUm93TGFiZWxcbiAgZmllbGRzOiBGaWVsZFtdO1xuICBhZG1pbj86IEFkbWluICYge1xuICAgIGluaXRDb2xsYXBzZWQ/OiBib29sZWFuIHwgZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgVGFic0FkbWluID0gT21pdDxBZG1pbiwgJ2Rlc2NyaXB0aW9uJz47XG5cbnR5cGUgVGFiQmFzZSA9IE9taXQ8RmllbGRCYXNlLCAncmVxdWlyZWQnIHwgJ3ZhbGlkYXRpb24nPiAmIHtcbiAgZmllbGRzOiBGaWVsZFtdXG4gIHNhdmVUb0pXVD86IGJvb2xlYW4gfCBzdHJpbmdcbiAgZGVzY3JpcHRpb24/OiBEZXNjcmlwdGlvblxuICBpbnRlcmZhY2VOYW1lPzogc3RyaW5nXG59XG5cbmV4cG9ydCB0eXBlIE5hbWVkVGFiID0gVGFiQmFzZSAmIHtcbiAgLyoqIEN1c3RvbWl6ZSBnZW5lcmF0ZWQgR3JhcGhRTCBhbmQgVHlwZXNjcmlwdCBzY2hlbWEgbmFtZXMuXG4gICAqIFRoZSBzbHVnIGlzIHVzZWQgYnkgZGVmYXVsdC5cbiAgICpcbiAgICogVGhpcyBpcyB1c2VmdWwgaWYgeW91IHdvdWxkIGxpa2UgdG8gZ2VuZXJhdGUgYSB0b3AgbGV2ZWwgdHlwZSB0byBzaGFyZSBhbW9uZ3N0IGNvbGxlY3Rpb25zL2ZpZWxkcy5cbiAgICogKipOb3RlKio6IFRvcCBsZXZlbCB0eXBlcyBjYW4gY29sbGlkZSwgZW5zdXJlIHRoZXkgYXJlIHVuaXF1ZSBhbW9uZyBjb2xsZWN0aW9ucywgYXJyYXlzLCBncm91cHMsIGJsb2NrcywgdGFicy5cbiAgICovXG4gIGludGVyZmFjZU5hbWU/OiBzdHJpbmdcbn1cblxuZXhwb3J0IHR5cGUgVW5uYW1lZFRhYiA9IE9taXQ8VGFiQmFzZSwgJ25hbWUnPiAmIHtcbiAgbGFiZWw6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCBzdHJpbmdcbiAgbG9jYWxpemVkPzogbmV2ZXJcbiAgaW50ZXJmYWNlTmFtZT86IG5ldmVyXG59XG5cbmV4cG9ydCB0eXBlIFRhYiA9IE5hbWVkVGFiIHwgVW5uYW1lZFRhYlxuXG5leHBvcnQgdHlwZSBUYWJzRmllbGQgPSBPbWl0PEZpZWxkQmFzZSwgJ2FkbWluJyB8ICduYW1lJyB8ICdsb2NhbGl6ZWQnIHwgJ3NhdmVUb0pXVCc+ICYge1xuICB0eXBlOiAndGFicyc7XG4gIHRhYnM6IFRhYltdXG4gIGFkbWluPzogVGFic0FkbWluXG59XG5cbmV4cG9ydCB0eXBlIFRhYkFzRmllbGQgPSBUYWIgJiB7XG4gIHR5cGU6ICd0YWInXG4gIG5hbWU/OiBzdHJpbmdcbn07XG5cbmV4cG9ydCB0eXBlIFVJRmllbGQgPSB7XG4gIG5hbWU6IHN0cmluZ1xuICBsYWJlbD86IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gfCBzdHJpbmdcbiAgYWRtaW46IHtcbiAgICBwb3NpdGlvbj86IHN0cmluZ1xuICAgIHdpZHRoPzogc3RyaW5nXG4gICAgY29uZGl0aW9uPzogQ29uZGl0aW9uXG4gICAgZGlzYWJsZUJ1bGtFZGl0PzogYm9vbGVhblxuICAgIGNvbXBvbmVudHM/OiB7XG4gICAgICBGaWx0ZXI/OiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT47XG4gICAgICBDZWxsPzogUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+O1xuICAgICAgRmllbGQ6IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PjtcbiAgICB9XG4gIH1cbiAgdHlwZTogJ3VpJztcbiAgLyoqIEV4dGVuc2lvbiBwb2ludCB0byBhZGQgeW91ciBjdXN0b20gZGF0YS4gKi9cbiAgY3VzdG9tPzogUmVjb3JkPHN0cmluZywgYW55Pjtcbn1cblxuZXhwb3J0IHR5cGUgVXBsb2FkRmllbGQgPSBGaWVsZEJhc2UgJiB7XG4gIHR5cGU6ICd1cGxvYWQnXG4gIHJlbGF0aW9uVG86IHN0cmluZ1xuICBtYXhEZXB0aD86IG51bWJlclxuICBmaWx0ZXJPcHRpb25zPzogRmlsdGVyT3B0aW9ucztcbn1cblxudHlwZSBDb2RlQWRtaW4gPSBBZG1pbiAmIHtcbiAgbGFuZ3VhZ2U/OiBzdHJpbmc7XG4gIGVkaXRvck9wdGlvbnM/OiBFZGl0b3JQcm9wc1snb3B0aW9ucyddO1xufVxuXG5leHBvcnQgdHlwZSBDb2RlRmllbGQgPSBPbWl0PEZpZWxkQmFzZSwgJ2FkbWluJz4gJiB7XG4gIGFkbWluPzogQ29kZUFkbWluXG4gIG1pbkxlbmd0aD86IG51bWJlclxuICBtYXhMZW5ndGg/OiBudW1iZXJcbiAgdHlwZTogJ2NvZGUnO1xufVxuXG50eXBlIEpTT05BZG1pbiA9IEFkbWluICYge1xuICBlZGl0b3JPcHRpb25zPzogRWRpdG9yUHJvcHNbJ29wdGlvbnMnXTtcbn1cblxuZXhwb3J0IHR5cGUgSlNPTkZpZWxkID0gT21pdDxGaWVsZEJhc2UsICdhZG1pbic+ICYge1xuICBhZG1pbj86IEpTT05BZG1pblxuICB0eXBlOiAnanNvbic7XG59XG5cbmV4cG9ydCB0eXBlIFNlbGVjdEZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAnc2VsZWN0J1xuICBvcHRpb25zOiBPcHRpb25bXVxuICBoYXNNYW55PzogYm9vbGVhblxuICBhZG1pbj86IEFkbWluICYge1xuICAgIGlzQ2xlYXJhYmxlPzogYm9vbGVhbjtcbiAgICBpc1NvcnRhYmxlPzogYm9vbGVhbjtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBSZWxhdGlvbnNoaXBGaWVsZCA9IEZpZWxkQmFzZSAmIHtcbiAgdHlwZTogJ3JlbGF0aW9uc2hpcCc7XG4gIHJlbGF0aW9uVG86IHN0cmluZyB8IHN0cmluZ1tdO1xuICBoYXNNYW55PzogYm9vbGVhbjtcbiAgbWF4RGVwdGg/OiBudW1iZXI7XG4gIGZpbHRlck9wdGlvbnM/OiBGaWx0ZXJPcHRpb25zO1xuICBhZG1pbj86IEFkbWluICYge1xuICAgIGlzU29ydGFibGU/OiBib29sZWFuO1xuICAgIGFsbG93Q3JlYXRlPzogYm9vbGVhbjtcbiAgfSxcbn0gJiAoe1xuICBoYXNNYW55OiB0cnVlXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgJ21pblJvd3MnIGluc3RlYWRcbiAgICovXG4gIG1pbj86IG51bWJlclxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlICdtYXhSb3dzJyBpbnN0ZWFkXG4gICAqL1xuICBtYXg/OiBudW1iZXJcbiAgbWluUm93cz86IG51bWJlclxuICBtYXhSb3dzPzogbnVtYmVyXG59IHwge1xuICBoYXNNYW55PzogZmFsc2UgfCB1bmRlZmluZWRcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzZSAnbWluUm93cycgaW5zdGVhZFxuICAgKi9cbiAgbWluPzogdW5kZWZpbmVkXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2UgJ21heFJvd3MnIGluc3RlYWRcbiAgICovXG4gIG1heD86IHVuZGVmaW5lZFxuICBtaW5Sb3dzPzogdW5kZWZpbmVkXG4gIG1heFJvd3M/OiB1bmRlZmluZWRcbn0pXG5cbmV4cG9ydCB0eXBlIFZhbHVlV2l0aFJlbGF0aW9uID0ge1xuICByZWxhdGlvblRvOiBzdHJpbmdcbiAgdmFsdWU6IHN0cmluZyB8IG51bWJlclxufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsdWVJc1ZhbHVlV2l0aFJlbGF0aW9uKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgVmFsdWVXaXRoUmVsYXRpb24ge1xuICByZXR1cm4gdmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiAncmVsYXRpb25UbycgaW4gdmFsdWUgJiYgJ3ZhbHVlJyBpbiB2YWx1ZTtcbn1cblxuZXhwb3J0IHR5cGUgUmVsYXRpb25zaGlwVmFsdWUgPSAoc3RyaW5nIHwgbnVtYmVyKVxuICB8IChzdHJpbmcgfCBudW1iZXIpW11cbiAgfCBWYWx1ZVdpdGhSZWxhdGlvblxuICB8IFZhbHVlV2l0aFJlbGF0aW9uW11cblxudHlwZSBSaWNoVGV4dFBsdWdpbiA9IChlZGl0b3I6IEVkaXRvcikgPT4gRWRpdG9yO1xuXG5leHBvcnQgdHlwZSBSaWNoVGV4dEN1c3RvbUVsZW1lbnQgPSB7XG4gIG5hbWU6IHN0cmluZ1xuICBCdXR0b246IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PlxuICBFbGVtZW50OiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT5cbiAgcGx1Z2lucz86IFJpY2hUZXh0UGx1Z2luW11cbn1cblxuZXhwb3J0IHR5cGUgUmljaFRleHRDdXN0b21MZWFmID0ge1xuICBuYW1lOiBzdHJpbmdcbiAgQnV0dG9uOiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT5cbiAgTGVhZjogUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+XG4gIHBsdWdpbnM/OiBSaWNoVGV4dFBsdWdpbltdXG59XG5cbmV4cG9ydCB0eXBlIFJpY2hUZXh0RWxlbWVudCA9ICdoMScgfCAnaDInIHwgJ2gzJyB8ICdoNCcgfCAnaDUnIHwgJ2g2JyB8ICdibG9ja3F1b3RlJyB8ICd1bCcgfCAnb2wnIHwgJ2xpbmsnIHwgJ3JlbGF0aW9uc2hpcCcgfCAndXBsb2FkJyB8ICdpbmRlbnQnIHwgJ3RleHRBbGlnbicgfCBSaWNoVGV4dEN1c3RvbUVsZW1lbnQ7XG5leHBvcnQgdHlwZSBSaWNoVGV4dExlYWYgPSAnYm9sZCcgfCAnaXRhbGljJyB8ICd1bmRlcmxpbmUnIHwgJ3N0cmlrZXRocm91Z2gnIHwgJ2NvZGUnIHwgUmljaFRleHRDdXN0b21MZWFmO1xuXG5leHBvcnQgdHlwZSBSaWNoVGV4dEZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAncmljaFRleHQnO1xuICBhZG1pbj86IEFkbWluICYge1xuICAgIHBsYWNlaG9sZGVyPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPiB8IHN0cmluZ1xuICAgIGVsZW1lbnRzPzogUmljaFRleHRFbGVtZW50W107XG4gICAgbGVhdmVzPzogUmljaFRleHRMZWFmW107XG4gICAgaGlkZUd1dHRlcj86IGJvb2xlYW5cbiAgICB1cGxvYWQ/OiB7XG4gICAgICBjb2xsZWN0aW9uczoge1xuICAgICAgICBbY29sbGVjdGlvbjogc3RyaW5nXToge1xuICAgICAgICAgIGZpZWxkczogRmllbGRbXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBsaW5rPzoge1xuICAgICAgZmllbGRzPzogRmllbGRbXSB8ICgoYXJnczogeyBkZWZhdWx0RmllbGRzOiBGaWVsZFtdLCBjb25maWc6IFNhbml0aXplZENvbmZpZywgaTE4bjogSWkxOG4gfSkgPT4gRmllbGRbXSk7XG4gICAgfVxuICAgIHJ0bD86IGJvb2xlYW5cbiAgfVxufVxuXG5leHBvcnQgdHlwZSBBcnJheUZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAnYXJyYXknO1xuICBtaW5Sb3dzPzogbnVtYmVyO1xuICBtYXhSb3dzPzogbnVtYmVyO1xuICBsYWJlbHM/OiBMYWJlbHM7XG4gIGZpZWxkczogRmllbGRbXTtcbiAgYWRtaW4/OiBBZG1pbiAmIHtcbiAgICBpbml0Q29sbGFwc2VkPzogYm9vbGVhbiB8IGZhbHNlO1xuICAgIGNvbXBvbmVudHM/OiB7XG4gICAgICBSb3dMYWJlbD86IFJvd0xhYmVsXG4gICAgfSAmIEFkbWluWydjb21wb25lbnRzJ11cbiAgfTtcbiAgLyoqIEN1c3RvbWl6ZSBnZW5lcmF0ZWQgR3JhcGhRTCBhbmQgVHlwZXNjcmlwdCBzY2hlbWEgbmFtZXMuXG4gICAqIEJ5IGRlZmF1bHQgaXQgaXMgYm91bmQgdG8gdGhlIGNvbGxlY3Rpb24uXG4gICAqXG4gICAqIFRoaXMgaXMgdXNlZnVsIGlmIHlvdSB3b3VsZCBsaWtlIHRvIGdlbmVyYXRlIGEgdG9wIGxldmVsIHR5cGUgdG8gc2hhcmUgYW1vbmdzdCBjb2xsZWN0aW9ucy9maWVsZHMuXG4gICAqICoqTm90ZSoqOiBUb3AgbGV2ZWwgdHlwZXMgY2FuIGNvbGxpZGUsIGVuc3VyZSB0aGV5IGFyZSB1bmlxdWUgYW1vbmcgY29sbGVjdGlvbnMsIGFycmF5cywgZ3JvdXBzLCBibG9ja3MsIHRhYnMuXG4gICAqL1xuICBpbnRlcmZhY2VOYW1lPzogc3RyaW5nXG59O1xuXG5leHBvcnQgdHlwZSBSYWRpb0ZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAncmFkaW8nO1xuICBvcHRpb25zOiBPcHRpb25bXVxuICBhZG1pbj86IEFkbWluICYge1xuICAgIGxheW91dD86ICdob3Jpem9udGFsJyB8ICd2ZXJ0aWNhbCdcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBCbG9jayA9IHtcbiAgc2x1Zzogc3RyaW5nO1xuICBsYWJlbHM/OiBMYWJlbHM7XG4gIGZpZWxkczogRmllbGRbXTtcbiAgaW1hZ2VVUkw/OiBzdHJpbmc7XG4gIGltYWdlQWx0VGV4dD86IHN0cmluZztcbiAgLyoqIEBkZXByZWNhdGVkIC0gcGxlYXNlIG1pZ3JhdGUgdG8gdGhlIGludGVyZmFjZU5hbWUgcHJvcGVydHkgaW5zdGVhZC4gKi9cbiAgZ3JhcGhRTD86IHtcbiAgICBzaW5ndWxhck5hbWU/OiBzdHJpbmdcbiAgfVxuICAvKiogQ3VzdG9taXplIGdlbmVyYXRlZCBHcmFwaFFMIGFuZCBUeXBlc2NyaXB0IHNjaGVtYSBuYW1lcy5cbiAgICogVGhlIHNsdWcgaXMgdXNlZCBieSBkZWZhdWx0LlxuICAgKlxuICAgKiBUaGlzIGlzIHVzZWZ1bCBpZiB5b3Ugd291bGQgbGlrZSB0byBnZW5lcmF0ZSBhIHRvcCBsZXZlbCB0eXBlIHRvIHNoYXJlIGFtb25nc3QgY29sbGVjdGlvbnMvZmllbGRzLlxuICAgKiAqKk5vdGUqKjogVG9wIGxldmVsIHR5cGVzIGNhbiBjb2xsaWRlLCBlbnN1cmUgdGhleSBhcmUgdW5pcXVlIGFtb25nIGNvbGxlY3Rpb25zLCBhcnJheXMsIGdyb3VwcywgYmxvY2tzLCB0YWJzLlxuICAgKi9cbiAgaW50ZXJmYWNlTmFtZT86IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBCbG9ja0ZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAnYmxvY2tzJztcbiAgbWluUm93cz86IG51bWJlcjtcbiAgbWF4Um93cz86IG51bWJlcjtcbiAgYmxvY2tzOiBCbG9ja1tdO1xuICBkZWZhdWx0VmFsdWU/OiB1bmtub3duXG4gIGxhYmVscz86IExhYmVsc1xuICBhZG1pbj86IEFkbWluICYge1xuICAgIGluaXRDb2xsYXBzZWQ/OiBib29sZWFuIHwgZmFsc2U7XG4gIH1cblxufVxuXG5leHBvcnQgdHlwZSBQb2ludEZpZWxkID0gRmllbGRCYXNlICYge1xuICB0eXBlOiAncG9pbnQnLFxufVxuXG5leHBvcnQgdHlwZSBGaWVsZCA9XG4gIFRleHRGaWVsZFxuICB8IE51bWJlckZpZWxkXG4gIHwgRW1haWxGaWVsZFxuICB8IFRleHRhcmVhRmllbGRcbiAgfCBDaGVja2JveEZpZWxkXG4gIHwgRGF0ZUZpZWxkXG4gIHwgQmxvY2tGaWVsZFxuICB8IEdyb3VwRmllbGRcbiAgfCBSYWRpb0ZpZWxkXG4gIHwgUmVsYXRpb25zaGlwRmllbGRcbiAgfCBBcnJheUZpZWxkXG4gIHwgUmljaFRleHRGaWVsZFxuICB8IFNlbGVjdEZpZWxkXG4gIHwgVXBsb2FkRmllbGRcbiAgfCBDb2RlRmllbGRcbiAgfCBKU09ORmllbGRcbiAgfCBQb2ludEZpZWxkXG4gIHwgUm93RmllbGRcbiAgfCBDb2xsYXBzaWJsZUZpZWxkXG4gIHwgVGFic0ZpZWxkXG4gIHwgVUlGaWVsZDtcblxuZXhwb3J0IHR5cGUgRmllbGRBZmZlY3RpbmdEYXRhID1cbiAgVGV4dEZpZWxkXG4gIHwgTnVtYmVyRmllbGRcbiAgfCBFbWFpbEZpZWxkXG4gIHwgVGV4dGFyZWFGaWVsZFxuICB8IENoZWNrYm94RmllbGRcbiAgfCBEYXRlRmllbGRcbiAgfCBCbG9ja0ZpZWxkXG4gIHwgR3JvdXBGaWVsZFxuICB8IFJhZGlvRmllbGRcbiAgfCBSZWxhdGlvbnNoaXBGaWVsZFxuICB8IEFycmF5RmllbGRcbiAgfCBSaWNoVGV4dEZpZWxkXG4gIHwgU2VsZWN0RmllbGRcbiAgfCBVcGxvYWRGaWVsZFxuICB8IENvZGVGaWVsZFxuICB8IEpTT05GaWVsZFxuICB8IFBvaW50RmllbGRcbiAgfCBUYWJBc0ZpZWxkXG5cbmV4cG9ydCB0eXBlIE5vblByZXNlbnRhdGlvbmFsRmllbGQgPVxuICBUZXh0RmllbGRcbiAgfCBOdW1iZXJGaWVsZFxuICB8IEVtYWlsRmllbGRcbiAgfCBUZXh0YXJlYUZpZWxkXG4gIHwgQ2hlY2tib3hGaWVsZFxuICB8IERhdGVGaWVsZFxuICB8IEJsb2NrRmllbGRcbiAgfCBHcm91cEZpZWxkXG4gIHwgUmFkaW9GaWVsZFxuICB8IFJlbGF0aW9uc2hpcEZpZWxkXG4gIHwgQXJyYXlGaWVsZFxuICB8IFJpY2hUZXh0RmllbGRcbiAgfCBTZWxlY3RGaWVsZFxuICB8IFVwbG9hZEZpZWxkXG4gIHwgQ29kZUZpZWxkXG4gIHwgSlNPTkZpZWxkXG4gIHwgUG9pbnRGaWVsZFxuICB8IFJvd0ZpZWxkXG4gIHwgVGFic0ZpZWxkXG4gIHwgQ29sbGFwc2libGVGaWVsZDtcblxuZXhwb3J0IHR5cGUgRmllbGRXaXRoUGF0aCA9IEZpZWxkICYge1xuICBwYXRoPzogc3RyaW5nXG59XG5cbmV4cG9ydCB0eXBlIEZpZWxkV2l0aFN1YkZpZWxkcyA9XG4gIEdyb3VwRmllbGRcbiAgfCBBcnJheUZpZWxkXG4gIHwgUm93RmllbGRcbiAgfCBDb2xsYXBzaWJsZUZpZWxkO1xuXG5leHBvcnQgdHlwZSBGaWVsZFByZXNlbnRhdGlvbmFsT25seSA9XG4gIFVJRmllbGQ7XG5cbmV4cG9ydCB0eXBlIEZpZWxkV2l0aE1hbnkgPVxuICBTZWxlY3RGaWVsZFxuICB8IFJlbGF0aW9uc2hpcEZpZWxkXG5cbmV4cG9ydCB0eXBlIEZpZWxkV2l0aE1heERlcHRoID1cbiAgVXBsb2FkRmllbGRcbiAgfCBSZWxhdGlvbnNoaXBGaWVsZFxuXG5leHBvcnQgZnVuY3Rpb24gZmllbGRIYXNTdWJGaWVsZHMoZmllbGQ6IEZpZWxkKTogZmllbGQgaXMgRmllbGRXaXRoU3ViRmllbGRzIHtcbiAgcmV0dXJuIChmaWVsZC50eXBlID09PSAnZ3JvdXAnIHx8IGZpZWxkLnR5cGUgPT09ICdhcnJheScgfHwgZmllbGQudHlwZSA9PT0gJ3JvdycgfHwgZmllbGQudHlwZSA9PT0gJ2NvbGxhcHNpYmxlJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWVsZElzQXJyYXlUeXBlKGZpZWxkOiBGaWVsZCk6IGZpZWxkIGlzIEFycmF5RmllbGQge1xuICByZXR1cm4gZmllbGQudHlwZSA9PT0gJ2FycmF5Jztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpZWxkSXNCbG9ja1R5cGUoZmllbGQ6IEZpZWxkKTogZmllbGQgaXMgQmxvY2tGaWVsZCB7XG4gIHJldHVybiBmaWVsZC50eXBlID09PSAnYmxvY2tzJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9wdGlvbklzT2JqZWN0KG9wdGlvbjogT3B0aW9uKTogb3B0aW9uIGlzIE9wdGlvbk9iamVjdCB7XG4gIHJldHVybiB0eXBlb2Ygb3B0aW9uID09PSAnb2JqZWN0Jztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9wdGlvbnNBcmVPYmplY3RzKG9wdGlvbnM6IE9wdGlvbltdKTogb3B0aW9ucyBpcyBPcHRpb25PYmplY3RbXSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KG9wdGlvbnMpICYmIHR5cGVvZiBvcHRpb25zPy5bMF0gPT09ICdvYmplY3QnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb3B0aW9uSXNWYWx1ZShvcHRpb246IE9wdGlvbik6IG9wdGlvbiBpcyBzdHJpbmcge1xuICByZXR1cm4gdHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZyc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWVsZFN1cHBvcnRzTWFueShmaWVsZDogRmllbGQpOiBmaWVsZCBpcyBGaWVsZFdpdGhNYW55IHtcbiAgcmV0dXJuIGZpZWxkLnR5cGUgPT09ICdzZWxlY3QnIHx8IGZpZWxkLnR5cGUgPT09ICdyZWxhdGlvbnNoaXAnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmllbGRIYXNNYXhEZXB0aChmaWVsZDogRmllbGQpOiBmaWVsZCBpcyBGaWVsZFdpdGhNYXhEZXB0aCB7XG4gIHJldHVybiAoZmllbGQudHlwZSA9PT0gJ3VwbG9hZCcgfHwgZmllbGQudHlwZSA9PT0gJ3JlbGF0aW9uc2hpcCcpICYmIHR5cGVvZiBmaWVsZC5tYXhEZXB0aCA9PT0gJ251bWJlcic7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWVsZElzUHJlc2VudGF0aW9uYWxPbmx5KGZpZWxkOiBGaWVsZCB8IFRhYkFzRmllbGQpOiBmaWVsZCBpcyBVSUZpZWxkIHtcbiAgcmV0dXJuIGZpZWxkLnR5cGUgPT09ICd1aSc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWVsZEFmZmVjdHNEYXRhKGZpZWxkOiBGaWVsZCB8IFRhYkFzRmllbGQpOiBmaWVsZCBpcyBGaWVsZEFmZmVjdGluZ0RhdGEge1xuICByZXR1cm4gJ25hbWUnIGluIGZpZWxkICYmICFmaWVsZElzUHJlc2VudGF0aW9uYWxPbmx5KGZpZWxkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRhYkhhc05hbWUodGFiOiBUYWIpOiB0YWIgaXMgTmFtZWRUYWIge1xuICByZXR1cm4gJ25hbWUnIGluIHRhYjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpZWxkSXNMb2NhbGl6ZWQoZmllbGQ6IEZpZWxkIHwgVGFiKTogYm9vbGVhbiB7XG4gIHJldHVybiAnbG9jYWxpemVkJyBpbiBmaWVsZCAmJiBmaWVsZC5sb2NhbGl6ZWQ7XG59XG5cbmV4cG9ydCB0eXBlIEhvb2tOYW1lID0gJ2JlZm9yZVJlYWQnIHwgJ2JlZm9yZUNoYW5nZScgfCAnYmVmb3JlVmFsaWRhdGUnIHwgJ2FmdGVyQ2hhbmdlJyB8ICdhZnRlclJlYWQnO1xuIl0sIm5hbWVzIjpbInZhbHVlSXNWYWx1ZVdpdGhSZWxhdGlvbiIsInZhbHVlIiwiZmllbGRIYXNTdWJGaWVsZHMiLCJmaWVsZCIsInR5cGUiLCJmaWVsZElzQXJyYXlUeXBlIiwiZmllbGRJc0Jsb2NrVHlwZSIsIm9wdGlvbklzT2JqZWN0Iiwib3B0aW9uIiwib3B0aW9uc0FyZU9iamVjdHMiLCJvcHRpb25zIiwiQXJyYXkiLCJpc0FycmF5Iiwib3B0aW9uSXNWYWx1ZSIsImZpZWxkU3VwcG9ydHNNYW55IiwiZmllbGRIYXNNYXhEZXB0aCIsIm1heERlcHRoIiwiZmllbGRJc1ByZXNlbnRhdGlvbmFsT25seSIsImZpZWxkQWZmZWN0c0RhdGEiLCJ0YWJIYXNOYW1lIiwidGFiIiwiZmllbGRJc0xvY2FsaXplZCIsImxvY2FsaXplZCJdLCJtYXBwaW5ncyI6IkFBQUEsdUNBQXVDLEdBbVh2QyxPQUFPLFNBQVNBLHlCQUF5QkMsS0FBYztJQUNyRCxPQUFPQSxVQUFVLFFBQVEsT0FBT0EsVUFBVSxZQUFZLGdCQUFnQkEsU0FBUyxXQUFXQTtBQUM1RjtBQXNNQSxPQUFPLFNBQVNDLGtCQUFrQkMsS0FBWTtJQUM1QyxPQUFRQSxNQUFNQyxJQUFJLEtBQUssV0FBV0QsTUFBTUMsSUFBSSxLQUFLLFdBQVdELE1BQU1DLElBQUksS0FBSyxTQUFTRCxNQUFNQyxJQUFJLEtBQUs7QUFDckc7QUFFQSxPQUFPLFNBQVNDLGlCQUFpQkYsS0FBWTtJQUMzQyxPQUFPQSxNQUFNQyxJQUFJLEtBQUs7QUFDeEI7QUFFQSxPQUFPLFNBQVNFLGlCQUFpQkgsS0FBWTtJQUMzQyxPQUFPQSxNQUFNQyxJQUFJLEtBQUs7QUFDeEI7QUFFQSxPQUFPLFNBQVNHLGVBQWVDLE1BQWM7SUFDM0MsT0FBTyxPQUFPQSxXQUFXO0FBQzNCO0FBRUEsT0FBTyxTQUFTQyxrQkFBa0JDLE9BQWlCO1FBQ1RBO0lBQXhDLE9BQU9DLE1BQU1DLE9BQU8sQ0FBQ0YsWUFBWSxTQUFPQSxXQUFBQSxxQkFBQUEsK0JBQUFBLFFBQVMsQ0FBQyxFQUFFLE1BQUs7QUFDM0Q7QUFFQSxPQUFPLFNBQVNHLGNBQWNMLE1BQWM7SUFDMUMsT0FBTyxPQUFPQSxXQUFXO0FBQzNCO0FBRUEsT0FBTyxTQUFTTSxrQkFBa0JYLEtBQVk7SUFDNUMsT0FBT0EsTUFBTUMsSUFBSSxLQUFLLFlBQVlELE1BQU1DLElBQUksS0FBSztBQUNuRDtBQUVBLE9BQU8sU0FBU1csaUJBQWlCWixLQUFZO0lBQzNDLE9BQU8sQUFBQ0EsQ0FBQUEsTUFBTUMsSUFBSSxLQUFLLFlBQVlELE1BQU1DLElBQUksS0FBSyxjQUFhLEtBQU0sT0FBT0QsTUFBTWEsUUFBUSxLQUFLO0FBQ2pHO0FBRUEsT0FBTyxTQUFTQywwQkFBMEJkLEtBQXlCO0lBQ2pFLE9BQU9BLE1BQU1DLElBQUksS0FBSztBQUN4QjtBQUVBLE9BQU8sU0FBU2MsaUJBQWlCZixLQUF5QjtJQUN4RCxPQUFPLFVBQVVBLFNBQVMsQ0FBQ2MsMEJBQTBCZDtBQUN2RDtBQUVBLE9BQU8sU0FBU2dCLFdBQVdDLEdBQVE7SUFDakMsT0FBTyxVQUFVQTtBQUNuQjtBQUVBLE9BQU8sU0FBU0MsaUJBQWlCbEIsS0FBa0I7SUFDakQsT0FBTyxlQUFlQSxTQUFTQSxNQUFNbUIsU0FBUztBQUNoRCJ9